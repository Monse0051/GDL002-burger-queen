{"version":3,"sources":["Components/Food.js","Components/Total.js","Components/SendTo.js","Components/OrderElement.js","Components/MenuDisplay.js","Components/MenuType.js","Components/Navbar.js","Components/Cocina.js","App.js","serviceWorker.js","index.js"],"names":["Food","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","bind","assertThisInitialized","onHandleOrder","food","react_default","a","createElement","className","descripcion","precio","React","Component","Total","total","SendTo","dataBase","app","firebase","firestore","console","log","order","orderList","table","date","Date","now","collection","doc","set","onSend","disabled","enabled","OrderElement","onDelete","onClickRemove","MenuDisplay","state","tableNumber","newOrderList","push","setState","index","concat","toConsumableArray","slice","_this2","menuList","length","src_Components_Food","key","id","map","Components_OrderElement","toString","onRemove","Components_Total","Components_SendTo","MenuType","_addIdToList","menu","Desayunos","menuType","arr","forEach","element","Comidas","_onClickSelectMenu","_this3","buttonDesayunos","onclickSelectDesayuno","buttonComidas","onclickSelectComida","Components_MenuDisplay","Navbar","react_router_dom","to","Cocina","App","ID","error","isLoaded","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","get","then","exists","data","_this$state","message","Components_Navbar","react_router","exact","path","render","src_Components_MenuType","Components_Cocina","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.287211bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Food.css';\r\n\r\n\r\nclass Food extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n\r\n    }\r\n\r\n    onClick(){\r\n        this.props.onHandleOrder(this.props.food);\r\n    }\r\n\r\n    render(){\r\n        return <div>\r\n                    <button className= \"food btn btn-success btn-lg\" onClick={this.onClick}>\r\n                        {this.props.food.descripcion} <br></br>\r\n                        {\" $\" + this.props.food.precio }\r\n                    </button>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default Food;","import React from 'react';\r\n\r\nclass Total extends React.Component{\r\n    render(){\r\n        return (\r\n            <h2>{\"Total $ \" + this.props.total}</h2>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Total;","import React from 'react';\r\nimport firebase from 'firebase';\r\n\r\nclass SendTo extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n\r\n        this.dataBase = null;\r\n    }\r\n\r\n    componentDidMount(){\r\n        const app = firebase.app();\r\n        this.dataBase = app.firestore();\r\n    }\r\n\r\n    onClick(){\r\n        console.log(\"sending order...\", this.props.order);\r\n\r\n        const order = {\r\n            orderList: this.props.order,\r\n            table: this.props.table,\r\n            date: Date.now()    \r\n        }\r\n\r\n        let setOrder = this.dataBase.collection(\"Ordenes\").doc().set(order);\r\n\r\n        this.props.onSend();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <button className=\"send-to\"\r\n                onClick={this.onClick}\r\n                disabled={!this.props.enabled}>\r\n                Enviar a cocina\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SendTo;","import React from 'react';\r\n\r\nclass OrderElement extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onDelete = this.onDelete.bind(this);\r\n\r\n    }\r\n\r\n    onDelete(){\r\n        this.props.onClickRemove();\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"OrderElement\">\r\n                    <h3>{this.props.food.descripcion}  ${this.props.food.precio}</h3>\r\n                    <button className=\"btn btn-info btn-lg\" onClick={this.onDelete}>\r\n                        Eliminar</button>\r\n                </div>;\r\n    }\r\n}\r\n\r\nexport default OrderElement;","import React from 'react';\r\nimport Food from './Food';\r\nimport Total from './Total';\r\nimport SendTo from './SendTo';\r\nimport OrderElement  from './OrderElement'\r\n\r\n\r\nclass MenuDisplay extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            orderList : [],\r\n            tableNumber: 0\r\n        };\r\n        this.onHandleOrder = this.onHandleOrder.bind(this);\r\n        this.onSend = this.onSend.bind(this);\r\n    }\r\n\r\n    onHandleOrder(food){\r\n        let newOrderList = this.state.orderList;\r\n        newOrderList.push(food);\r\n        this.setState({orderList: newOrderList});\r\n    }\r\n\r\n    onRemove(index){\r\n        let orderList = this.state.orderList;\r\n\r\n        let newOrderList = [\r\n            ...orderList.slice(0, index),\r\n            ...orderList.slice(index + 1)\r\n        ];\r\n        this.setState({orderList: newOrderList});\r\n    }\r\n\r\n    onSend(){\r\n        console.log(\"DEBUG: Enviando a cocina\");\r\n        this.setState({orderList: []});\r\n    }\r\n\r\n    render(){\r\n        let menuList = [];\r\n\r\n        for (let index = 0; index < this.props.menuList.length; index++) {\r\n            const food = this.props.menuList[index];\r\n             //TODO: add a property key https://reactjs.org/docs/lists-and-keys.html#keys\r\n            menuList.push(<div>\r\n                <Food\r\n                    key = {food.id}\r\n                    food = {food}\r\n                    onHandleOrder = {this.onHandleOrder}\r\n                />\r\n                </div>);\r\n        }\r\n\r\n        let total = 0;\r\n\r\n        for (let index = 0; index < this.state.orderList.length; index++) {\r\n            const order =  this.state.orderList[index];\r\n            total += order.precio;\r\n        }\r\n\r\n        return <div className=\"MenuDisplay\">\r\n            <div className=\"MenuList\">\r\n                <ol>\r\n                    {menuList}\r\n                </ol>\r\n            </div>\r\n            <div className=\"container\">\r\n                <ol>\r\n                    {this.state.orderList.map((food, index) => {\r\n                        return (\r\n                            <OrderElement\r\n                                key={food.id + \"_\" + index.toString()}\r\n                                food={food}\r\n                                onClickRemove={()=>this.onRemove(index)}\r\n                            />);\r\n                    })}\r\n                    <Total\r\n                        total={total}\r\n                    />\r\n                    <SendTo\r\n                        order={this.state.orderList}\r\n                        table={this.state.tableNumber}\r\n                        enabled={total>0}\r\n                        onSend={this.onSend}\r\n                    />\r\n                </ol>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default MenuDisplay;","import React from 'react';\r\nimport MenuDisplay  from './MenuDisplay';\r\nimport './MenuType.css';\r\n\r\n\r\n\r\nclass MenuType extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this._addIdToList(this.props.menu.Desayunos, \"desayuno\");\r\n        this.menuList = this.props.menu.Desayunos;\r\n\r\n        this.state = {menuType: \"desayuno\"};\r\n    }\r\n\r\n    _addIdToList(arr, menuType){\r\n        arr.forEach( (element, index) => {\r\n            element.id = this.props.id + menuType + index.toString();\r\n        });\r\n    }\r\n\r\n    _onClickSelectMenu(menuList, menuType){\r\n        this.setState({menuType: menuType});\r\n        this._addIdToList(this.props.menu.Comidas, menuType);\r\n        this.menuList = menuList\r\n    }\r\n\r\n    onclickSelectDesayuno(){\r\n        this._onClickSelectMenu(this.props.menu.Desayunos, \"desayuno\");\r\n    }\r\n\r\n    onclickSelectComida(){\r\n        this._onClickSelectMenu(this.props.menu.Comidas, \"comida\");\r\n    }\r\n\r\n\r\n    render(){\r\n        let buttonDesayunos =   (<button className = \"menutype btn btn-outline-warning btn-lg\" \r\n                                    onClick={()=>{this.onclickSelectDesayuno()}}>\r\n                                    Desayunos\r\n                                </button>);\r\n        let buttonComidas =     (<button className = \"menutype btn btn-outline-warning btn-lg\"\r\n                                onClick={()=>{this.onclickSelectComida()}}>\r\n                                Comidas\r\n                                </button>);\r\n\r\n    \r\n        return <div className=\"MenuType\">\r\n                    {buttonDesayunos}\r\n                    {buttonComidas}\r\n                    <MenuDisplay\r\n                        menuList={this.menuList}\r\n                    />\r\n                </div>;\r\n    }\r\n}\r\n\r\nexport default MenuType;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar = () => (\r\n    <nav>\r\n        <h2 className= \"logo-link\">Burguer Queen</h2>\r\n        <ul className= \"nav-menu\">\r\n        <li><Link className= \"nav-menu__link\" to= \"/\">Mesero </Link> </li>\r\n        <li><Link className= \"nav-menu__link\" to= \"/Cocina\">Cocina </Link></li>\r\n        </ul>\r\n        \r\n    </nav>\r\n\r\n);\r\n\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nclass Cocina extends React.Component{\r\n\r\n    \r\n    render() {\r\n        return <div className=\"cocina\">\r\n                    <h3>Estamos en la cocina</h3>\r\n                    <button className=\"btn btn-info btn-lg\">Eliminar</button>\r\n                </div>;\r\n    }\r\n}\r\n\r\nexport default Cocina;","import React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\"\r\nimport MenuType from './Components/MenuType';\r\nimport Navbar from './Components/Navbar';\r\nimport './Components/Navbar.css';\r\nimport Cocina from './Components/Cocina'\r\nimport firebase from 'firebase';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.ID = \"vMH5efLYsj23yjapA3rf\";\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      menu: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    // Your web app's Firebase configuration\r\n    const firebaseConfig = {\r\n      apiKey: \"AIzaSyCjy0hWWi5gvz23Pm87OmnWA00vLSjx-SA\",\r\n      authDomain: \"burguer-queen-24934.firebaseapp.com\",\r\n      databaseURL: \"https://burguer-queen-24934.firebaseio.com\",\r\n      projectId: \"burguer-queen-24934\",\r\n      storageBucket: \"burguer-queen-24934.appspot.com\",\r\n      messagingSenderId: \"338402146466\",\r\n      appId: \"1:338402146466:web:deef35a2e34880bb\"\r\n    };\r\n    // Initialize Firebase\r\n    let app = firebase.initializeApp(firebaseConfig);\r\n\r\n    const dataBase = app.firestore();\r\n    let menuRef = dataBase.collection(\"Menu\").doc(this.ID);\r\n\r\n    menuRef.get()\r\n      .then(menu =>{\r\n        if (!menu.exists) {\r\n          console.log('Menu not found in firebase!');\r\n        } else {\r\n          console.log('Document data:', menu.data());\r\n          this.setState({\r\n            isLoaded: true,\r\n            menu: menu.data()\r\n          });\r\n        }\r\n      }, \r\n      error=>{\r\n        this.setState({\r\n          isLoaded: true,\r\n          error\r\n        })\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, menu } = this.state;\r\n    // TODO: handle error and isLoaded === false\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <BrowserRouter>\r\n        <div className=\"Burguer-Queen\">\r\n            <Navbar/>\r\n          <div className=\"numero de mesa\"> \r\n          </div>\r\n          <div className=\"Menus\">\r\n            <Route exact path = \"/\" render = {()=> <MenuType\r\n              menu={menu}\r\n              id = {this.ID}\r\n            />}/>\r\n            <Route path = \"/Cocina\" render = {()=> <Cocina/>}/>    \r\n          </div>\r\n\r\n        </div>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}